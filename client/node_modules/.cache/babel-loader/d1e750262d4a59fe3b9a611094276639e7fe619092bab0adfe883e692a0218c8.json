{"ast":null,"code":"var _jsxFileName = \"/Users/shivakumarmr/Documents/Internship/Employee Management/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header/Header';\nimport EmployeeList from './components/EmployeeList/EmployeeList';\nimport EmployeeForm from './components/EmployeeForm/EmployeeForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n  const API_BASE_URL = 'http://localhost:8000';\n\n  // Fetch all employees\n  const fetchEmployees = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/getAll`);\n      const data = await response.json();\n      if (response.ok) {\n        setEmployees(Array.isArray(data) ? data : []);\n      } else {\n        console.error('Failed to fetch employees:', data);\n        setEmployees([]);\n      }\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n      setEmployees([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add new employee\n  const addEmployee = async employeeData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/addEmp`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(employeeData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        fetchEmployees();\n        setShowForm(false);\n        alert('Employee added successfully!');\n      } else {\n        alert(data.message || 'Failed to add employee');\n      }\n    } catch (error) {\n      console.error('Error adding employee:', error);\n      alert('Error adding employee');\n    }\n  };\n\n  // Update employee\n  const updateEmployee = async (employeeId, employeeData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/emp/${employeeId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(employeeData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        fetchEmployees();\n        setEditingEmployee(null);\n        setShowForm(false);\n        alert('Employee updated successfully!');\n      } else {\n        alert(data.error || 'Failed to update employee');\n      }\n    } catch (error) {\n      console.error('Error updating employee:', error);\n      alert('Error updating employee');\n    }\n  };\n\n  // Delete employee\n  const deleteEmployee = async employeeId => {\n    if (window.confirm('Are you sure you want to delete this employee?')) {\n      try {\n        const response = await fetch(`${API_BASE_URL}/deleteEmp/${employeeId}`, {\n          method: 'DELETE'\n        });\n        const data = await response.json();\n        if (response.ok) {\n          fetchEmployees();\n          alert('Employee deleted successfully!');\n        } else {\n          alert(data.error || 'Failed to delete employee');\n        }\n      } catch (error) {\n        console.error('Error deleting employee:', error);\n        alert('Error deleting employee');\n      }\n    }\n  };\n  const handleEdit = employee => {\n    setEditingEmployee(employee);\n    setShowForm(true);\n  };\n  const handleCancelForm = () => {\n    setEditingEmployee(null);\n    setShowForm(false);\n  };\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Employee Management System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-button\",\n            onClick: () => setShowForm(true),\n            children: \"Add New Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), showForm && /*#__PURE__*/_jsxDEV(EmployeeForm, {\n          employee: editingEmployee,\n          onSubmit: editingEmployee ? updateEmployee : addEmployee,\n          onCancel: handleCancelForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EmployeeList, {\n          employees: employees,\n          loading: loading,\n          onEdit: handleEdit,\n          onDelete: deleteEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xrM7vHK4ftXGQNBWhtXT8Hrw7WU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","EmployeeList","EmployeeForm","jsxDEV","_jsxDEV","App","_s","employees","setEmployees","loading","setLoading","editingEmployee","setEditingEmployee","showForm","setShowForm","API_BASE_URL","fetchEmployees","response","fetch","data","json","ok","Array","isArray","console","error","addEmployee","employeeData","method","headers","body","JSON","stringify","alert","message","updateEmployee","employeeId","deleteEmployee","window","confirm","handleEdit","employee","handleCancelForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onCancel","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/shivakumarmr/Documents/Internship/Employee Management/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header/Header';\nimport EmployeeList from './components/EmployeeList/EmployeeList';\nimport EmployeeForm from './components/EmployeeForm/EmployeeForm';\nimport './App.css';\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n\n  const API_BASE_URL = 'http://localhost:8000';\n\n  // Fetch all employees\n  const fetchEmployees = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/getAll`);\n      const data = await response.json();\n      if (response.ok) {\n        setEmployees(Array.isArray(data) ? data : []);\n      } else {\n        console.error('Failed to fetch employees:', data);\n        setEmployees([]);\n      }\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n      setEmployees([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add new employee\n  const addEmployee = async (employeeData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/addEmp`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(employeeData),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        fetchEmployees();\n        setShowForm(false);\n        alert('Employee added successfully!');\n      } else {\n        alert(data.message || 'Failed to add employee');\n      }\n    } catch (error) {\n      console.error('Error adding employee:', error);\n      alert('Error adding employee');\n    }\n  };\n\n  // Update employee\n  const updateEmployee = async (employeeId, employeeData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/emp/${employeeId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(employeeData),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        fetchEmployees();\n        setEditingEmployee(null);\n        setShowForm(false);\n        alert('Employee updated successfully!');\n      } else {\n        alert(data.error || 'Failed to update employee');\n      }\n    } catch (error) {\n      console.error('Error updating employee:', error);\n      alert('Error updating employee');\n    }\n  };\n\n  // Delete employee\n  const deleteEmployee = async (employeeId) => {\n    if (window.confirm('Are you sure you want to delete this employee?')) {\n      try {\n        const response = await fetch(`${API_BASE_URL}/deleteEmp/${employeeId}`, {\n          method: 'DELETE',\n        });\n        const data = await response.json();\n        if (response.ok) {\n          fetchEmployees();\n          alert('Employee deleted successfully!');\n        } else {\n          alert(data.error || 'Failed to delete employee');\n        }\n      } catch (error) {\n        console.error('Error deleting employee:', error);\n        alert('Error deleting employee');\n      }\n    }\n  };\n\n  const handleEdit = (employee) => {\n    setEditingEmployee(employee);\n    setShowForm(true);\n  };\n\n  const handleCancelForm = () => {\n    setEditingEmployee(null);\n    setShowForm(false);\n  };\n\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"main-content\">\n        <div className=\"container\">\n          <div className=\"header-section\">\n            <h1>Employee Management System</h1>\n            <button \n              className=\"add-button\"\n              onClick={() => setShowForm(true)}\n            >\n              Add New Employee\n            </button>\n          </div>\n\n          {showForm && (\n            <EmployeeForm\n              employee={editingEmployee}\n              onSubmit={editingEmployee ? updateEmployee : addEmployee}\n              onCancel={handleCancelForm}\n            />\n          )}\n\n          <EmployeeList\n            employees={employees}\n            loading={loading}\n            onEdit={handleEdit}\n            onDelete={deleteEmployee}\n          />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}