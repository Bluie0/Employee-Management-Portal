{"ast":null,"code":"var _jsxFileName = \"/Users/shivakumarmr/Documents/Internship/Employee Management/client/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('authToken'));\n  const API_BASE_URL = 'http://localhost:3000/api';\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    try {\n      const storedToken = localStorage.getItem('authToken');\n      if (!storedToken) {\n        setLoading(false);\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/auth/me`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${storedToken}`,\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n        setToken(storedToken);\n      } else {\n        localStorage.removeItem('authToken');\n        setToken(null);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('authToken');\n      setToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.admin);\n        setToken(data.token);\n        localStorage.setItem('authToken', data.token);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: 'Network error'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await fetch(`${API_BASE_URL}/auth/logout`, {\n        method: 'POST',\n        credentials: 'include'\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n      setToken(null);\n      localStorage.removeItem('authToken');\n    }\n  };\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"4/tDz7EtZylx1oLcwMKKasxvEJs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","API_BASE_URL","checkAuth","storedToken","response","fetch","method","headers","credentials","ok","data","json","removeItem","error","console","login","email","password","body","JSON","stringify","admin","setItem","success","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shivakumarmr/Documents/Internship/Employee Management/client/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('authToken'));\n\n  const API_BASE_URL = 'http://localhost:3000/api';\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    try {\n      const storedToken = localStorage.getItem('authToken');\n      if (!storedToken) {\n        setLoading(false);\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/auth/me`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${storedToken}`,\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n        setToken(storedToken);\n      } else {\n        localStorage.removeItem('authToken');\n        setToken(null);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('authToken');\n      setToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setUser(data.admin);\n        setToken(data.token);\n        localStorage.setItem('authToken', data.token);\n        return { success: true };\n      } else {\n        return { success: false, error: data.error };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return { success: false, error: 'Network error' };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await fetch(`${API_BASE_URL}/auth/logout`, {\n        method: 'POST',\n        credentials: 'include',\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n      setToken(null);\n      localStorage.removeItem('authToken');\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}